<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text"/>

<xsl:template match="tree">

    <xsl:text>
digraph fsm {

    // states
    node [shape=plaintext]
</xsl:text>
    <xsl:variable name="next_scene" select="scene[1]/@key"/>

    <xsl:value-of select="scene[1]/@key"/>
    <xsl:text>[label="</xsl:text>
    <xsl:value-of select="scene[1]/@name"/>
    <xsl:text>\n</xsl:text>
    <xsl:value-of select="scene[1]/introduction"/>
    <xsl:text>"]</xsl:text>

    <xsl:apply-templates select="scene"/>

<xsl:text>}</xsl:text>
</xsl:template>


<xsl:template match="scene">
    
<xsl:text></xsl:text>
    <xsl:value-of select="@key"/>
    <xsl:text>

</xsl:text>
        <xsl:value-of select="introduction"/>
    <xsl:text>

</xsl:text>
        <xsl:value-of select="dialogue"/>
    <xsl:choose>
        <xsl:when test="branch">
            <xsl:text>
</xsl:text>
            <xsl:apply-templates select="branch"/>
            <xsl:apply-templates select="branch/scene"/>

        </xsl:when>

        <xsl:when test="not(following-sibling::scene)">
            <xsl:text>
The End!
</xsl:text>
        </xsl:when>
    </xsl:choose>

</xsl:template>

<xsl:template match="branch">

    <xsl:text>&lt;&lt;button [[</xsl:text>
    <xsl:value-of select="protagonist_reaction"/>
    <xsl:text>|</xsl:text>
        <xsl:value-of select="scene[1]/@key"/>
    <xsl:text>]]&gt;&gt;</xsl:text>
    <xsl:text>&lt;&lt;/button&gt;&gt;

</xsl:text>

</xsl:template>


</xsl:stylesheet>
